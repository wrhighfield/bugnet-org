<?xml version="1.0" encoding="utf-8"?>

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="ci" ToolsVersion="12.0">

  <Import Project="common.props" />
  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets" />


  <Target Name="ci" DependsOnTargets="clean;nugetRestore;version;build;unittest;publish" />

  <!--Restore Nuget Packages-->
  <Target Name="nugetRestore">
    <NuGetRestore Solution="$(SolutionPath)" />
  </Target>

  <!--Target to clean output folder if exists-->
  <Target Name="clean">
    <RemoveDir Directories="$(BuildPath)" Condition="Exists($(BuildPath))" />
  </Target>

  <!--Target to create assembly version info-->
  <Target Name="version">
    <Time>
      <Output TaskParameter="Year" PropertyName="Year" />
    </Time>

    <Message Text="Version: $(Version)" />

    <Attrib Files="$(SolutionPath)\Common\GlobalAssemblyInfo.cs" ReadOnly="False" />

    <AssemblyInfo CodeLanguage="CS"
                  OutputFile="$(SolutionPath)\Common\GlobalAssemblyInfo.cs"
                  GenerateClass="true"
                  AssemblyCompany="http://www.bugnetproject.com"
                  AssemblyCopyright="Copyright (C) 2006-$(Year) BugNET Project"
                  AssemblyProduct="BugNET Open Source Issue Tracker"
                  AssemblyConfiguration="$(BuildConfiguration)"
                  AssemblyVersion="$(Version)"
                  AssemblyFileVersion="$(FileVersion)"
                  AssemblyInformationalVersion="$(InformationalVersion)" />

  </Target>

  <!--Target to build solution using the sln file-->
  <Target Name="build" DependsOnTargets="clean">
    <Message Text="Building $(SolutionFileName)" />

    <MSBuild
      Projects="$(MainProjectPath)" Targets="Package"
      Properties="Configuration=$(BuildConfiguration);
									OutputPath=$(OutputPath);
									PackageLocation=$(BuildPath)\DeployPackage\BugNET_WAP_Package.zip;
									PackageAsSingleFile=True" />

  </Target>


  <ItemGroup>
    <UnitTestAssemblies Include="$(OutputPath)\BugNET.Tests.dll" />
  </ItemGroup>

  <Target Name="unittest" Condition="'$(UnitTest)'" DependsOnTargets="build">
    <Message Text="Running Unit Tests..." />
    <Message Text="Dlls in $(OutputPath):  @(UnitTestAssemblies->'%(FullPath)',' ')" />

    <Exec Command="nunit-console @(UnitTestAssemblies->'%(FullPath)',' ')  /nologo /framework:net-4.5" />

    <Message Text="Unit Tests Done." />
  </Target>

  <Target Name="publish" Condition="'$(Publish)'" DependsOnTargets="unittest">
    <Message Text="Publishing..." />

    <!-- copy install-->
    <ItemGroup>
      <InstallFiles
        Include="$(BuildPath)\DeployPackage\*.*"
        Exclude="**\Latest.SqlDataProvider.sql;**\App_Data\**" />
    </ItemGroup>

    <Copy SourceFiles="@(InstallFiles)" DestinationFolder="$(BuildPath)\dist\BugNet" />

    <!--Copy Latest.SqlDataProvider.sql-->
    <PropertyGroup>
      <LatestSqlDataProviderSql>$(OutputPath)\_PublishedWebsites\BugNET_WAP\Providers\DataProviders\SqlDataProvider\Latest.SqlDataProvider.sql</LatestSqlDataProviderSql>
      <LatestSqlDataProviderSqlDest>$(BuildPath)\dist\BugNet\Providers\DataProviders\SqlDataProvider\$(Version)_Latest.SqlDataProvider.sql</LatestSqlDataProviderSqlDest>

    </PropertyGroup>

    <Copy Condition="Exists('$(LatestSqlDataProviderSql)')"
          SourceFiles="$(LatestSqlDataProviderSql)"
          DestinationFiles="$(LatestSqlDataProviderSqlDest)" />

    <!--Copy Latest Release Notes-->
    <PropertyGroup>
      <LatestReleaseNotes>$(OutputPath)\_PublishedWebsites\BugNET_WAP\Install\LatestReleaseNotes.htm</LatestReleaseNotes>
      <LatestReleaseNotesDest>$(BuildPath)\dist\BugNET\Install\$(Version).htm</LatestReleaseNotesDest>
    </PropertyGroup>

    <Copy Condition="Exists('$(LatestReleaseNotes)')"
          SourceFiles="$(LatestReleaseNotes)"
          DestinationFiles="$(LatestReleaseNotesDest)" />

    <!-- copy svn hooks utility-->

    <ItemGroup>
      <SubversionHooks
        Include="$(SolutionPath)BugNET.SubversionHooks\bin\Release\**\*"
        Exclude="$(SolutionPath)BugNET.SubversionHooks\bin\Release\**\*.pdb" />
    </ItemGroup>
    <PropertyGroup>
      <SubversionHooksDest>$(BuildPath)\dist\BugNET.SubversionHooks</SubversionHooksDest>
    </PropertyGroup>

    <Copy SourceFiles="@(SubversionHooks)" DestinationFolder="$(SubversionHooksDest)" />

    <!-- copy hg hooks utility-->
    <ItemGroup>
      <HgHooks
        Include="$(SolutionPath)BugNET.MercurialChangeGroupHook\bin\Release\**\*"
        Exclude="$(SolutionPath)BugNET.MercurialChangeGroupHook\bin\Release\**\*.pdb" />
    </ItemGroup>
    <PropertyGroup>
      <HgHooksDest>$(BuildPath)\dist\BugNET.MercurialChangeGroupHook</HgHooksDest>
    </PropertyGroup>

    <Copy SourceFiles="@(HgHooks)" DestinationFolder="$(HgHooksDest)" />


  </Target>

</Project>